package sample;

import java.util.Arrays;

public class mainclass {

	public static void main(String[] args) {
		String str = "sdfasdf";
		String output ="";
		for(int i=0;i<str.length();i++) {
			output =output +str.charAt(i);
		}
//		int[] a = new int[4];
//		a[0] = 1;
//		a[1] = 2;
//		a[2] = 3;
//		a[3] = 10;
//
//		int[] m = new int[4];
//		m[0] = 2;
//		m[1] = 3;
//		m[2] = 4;
//		m[3] = 5;
//		int[] ad = new int[2];
//		ad[0] = 1234;
//		ad[1]= 2345;
//		int[] ad1 = new int[2];
//		ad1[0] = 2345;
//		ad1[1]=4567;
//		int moves = minimumMoves(ad, ad1);
//		System.out.println(moves);

	}
	
	static int getUmbrellas(int n, int[] p) {
		int noOfUmb = 0;
		if(p.length ==1){
			   if(p[0] >n) {
				   return -1;
			   }
		}
		for(int i=0;i<p.length;i++) {
		   if(p[i] ==n) {
			   return 1;
		   } else {
			   
		   }
		}		
		return noOfUmb;

    }

	static int minimumMoves(int[] a, int[] m) {
		int noOfMoves = 0;
		for (int k = 0; k < a.length; k++) {			
			char[] digits = Integer.toString(a[k]).toCharArray();
			char[] digits1 = Integer.toString(m[k]).toCharArray();
			for (int i = 0; i < digits.length; i++) {
				if (digits[i] != digits1[i]) {
					while (digits[i] != digits1[i]) {
						if (digits[i] > digits1[i]) {
							digits[i] = (char) (digits[i] - 1);
						} else {
							digits[i] = (char) (digits[i] + 1);
						}
						noOfMoves++;
					}
				}
			}

		}

		return noOfMoves;

	}

}
